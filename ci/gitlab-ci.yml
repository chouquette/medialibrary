variables:
  GIT_SUBMODULE_STRATEGY: normal
  MEDIALIBRARY_IMG: registry.videolan.org/medialibrary:20210216210554
  MEDIALIBRARY_WIN32_IMG: registry.videolan.org/medialibrary-win32:20210215200735
  MEDIALIBRARY_WIN64_IMG: registry.videolan.org/medialibrary-win64:20210216181601
  VLC_DEBIAN_UNSTABLE_IMG: registry.videolan.org/vlc-debian-unstable:20210218132922
  MEDIALIB_TEST_FOLDER: $CI_PROJECT_DIR/medialib_tests/

linux:
    image: $MEDIALIBRARY_IMG
    rules:
      - if: $CI_MERGE_REQUEST_IID
      - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      - if: '$CI_PIPELINE_SOURCE == "schedule"'
    tags:
      - docker
      - amd64
    script:
      - cd /tmp/ && git clone --single-branch --branch=display_stack_on_timeout --depth=1 https://github.com/chouquette/meson
      - export PATH=/tmp/meson:$PATH
      - cd $CI_PROJECT_DIR
      - meson.py -Db_coverage=true build
      - cd build && ninja
      - meson.py test --no-stdsplit
      - mkdir html/
      - >
        gcovr -r "$CI_PROJECT_DIR/"
        -e "$CI_PROJECT_DIR/libvlcpp"
        -e "$CI_PROJECT_DIR/test"
        -e "$CI_PROJECT_DIR/src/database/SqliteErrors.h"
        -e "$CI_PROJECT_DIR/include/medialibrary/filesystem/Errors.h"
        -e "$CI_PROJECT_DIR/include/medialibrary/IMediaLibrary.h"
        --xml cobertura.xml --html=html/medialibrary.html --html-details
        -s
        -j 4
    artifacts:
      reports:
        cobertura: build/cobertura.xml
        junit: build/meson-logs/testlog.junit.xml
      name: "coverage-medialibrary-$CI_COMMIT_SHORT_SHA"
      paths:
        - build/html/
        - $MEDIALIB_TEST_FOLDER/**/test.db
        - $CI_PROJECT_DIR/build/meson-logs/testlog.txt
      when: always

linux-novlc:
    image: $MEDIALIBRARY_IMG
    rules:
      - if: $CI_MERGE_REQUEST_IID
    tags:
      - docker
      - amd64
    script:
      - meson -Dlibvlc=disabled --buildtype=release build
      - cd build && ninja

win32:
    image: $MEDIALIBRARY_WIN32_IMG
    variables:
      MESON_TESTTHREADS: 8
    rules:
      - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "$CI_DEFAULT_BRANCH@videolan/medialibrary"'
      - if: '$CI_PIPELINE_SOURCE == "schedule"'
        when: never
    tags:
      - docker
      - amd64
    script:
      - >
        meson -Dpkg_config_path=/prefix/lib/pkgconfig
        --cross-file=/opt/crossfiles/i686-w64-mingw32.meson
        -Ddefault_library=static
        build
      - cd build && ninja
      - cp /prefix/dll/libvlc.dll .
      - cp /prefix/dll/libvlccore.dll .
      - ln -s /prefix/lib/vlc/plugins/ .
      - MEDIALIB_TEST_FOLDER=`winepath -w $MEDIALIB_TEST_FOLDER` meson test --no-stdsplit
    artifacts:
      when: on_failure
      paths: 
        - $MEDIALIB_TEST_FOLDER/**/test.db
        - $CI_PROJECT_DIR/build/meson-logs/testlog.txt
      expire_in: 1 week

win64:
    image: $MEDIALIBRARY_WIN64_IMG
    variables:
      MESON_TESTTHREADS: 8
    rules:
      - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "$CI_DEFAULT_BRANCH@videolan/medialibrary"'
      - if: '$CI_PIPELINE_SOURCE == "schedule"'
        when: never
    tags:
      - docker
      - amd64
    script:
      - >
        PKG_CONFIG_PATH=/prefix/lib/pkgconfig 
        meson 
        --cross-file=/opt/crossfiles/x86_64-w64-mingw32.meson 
        build
      - cd build && ninja
      - cp /prefix/dll/libvlc.dll .
      - cp /prefix/dll/libvlccore.dll .
      - ln -s /prefix/lib/vlc/plugins/ .
      - MEDIALIB_TEST_FOLDER=`winepath -w $MEDIALIB_TEST_FOLDER` meson test --no-stdsplit
    artifacts:
      when: on_failure
      paths: 
        - $MEDIALIB_TEST_FOLDER/**/test.db
        - $CI_PROJECT_DIR/build/meson-logs/testlog.txt
      expire_in: 1 week

asan-ubsan:
    image: $VLC_DEBIAN_UNSTABLE_IMG
    rules:
      - if: '$CI_PIPELINE_SOURCE == "schedule"'
        when: on_success
      - when: never
    tags:
      - docker
      - amd64
    variables:
      LSAN_OPTIONS: 'detect_leaks=0'
    script:
      - git clone https://code.videolan.org/videolan/vlc.git --depth=1
      - cd vlc && ./bootstrap
      - ./configure LDFLAGS="-lasan -lubsan" --prefix=$(pwd)/prefix --disable-qt --with-sanitizer=address,undefined --disable-medialibrary --disable-nls --enable-debug
      - make install -j8
      - export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:$(pwd)/prefix/lib/pkgconfig"
      - cd ..
      - meson -Db_sanitize=address,undefined build
      - cd build && meson test --no-stdsplit
      - meson compile fast_discover_cancel fast_teardown
      - ./test/fast_teardown/fast_teardown $CI_PROJECT_DIR/test/samples/samples
      - ./test/fast_discover_cancel/fast_discover_cancel $CI_PROJECT_DIR/test/samples/samples
    artifacts:
      when: on_failure
      paths:
        - $MEDIALIB_TEST_FOLDER/**/test.db
        - $CI_PROJECT_DIR/build/meson-logs/testlog.txt
      expire_in: 1 week

#tsan:
#    image: $VLC_DEBIAN_UNSTABLE_IMG
#    rules:
#      - if: '$CI_PIPELINE_SOURCE == "schedule"'
#        when: on_success
#      - when: never
#    tags:
#      - docker
#      - amd64
#    variables:
#        TSAN_OPTIONS: 'suppressions=$CI_PROJECT_DIR/ci/tsan_suppress_file'
#    script:
#      - git clone https://code.videolan.org/videolan/vlc.git --depth=1
#      - cd vlc && ./bootstrap
#      - ./configure LDFLAGS="-ltsan" --prefix=$(pwd)/prefix --disable-qt --with-sanitizer=thread --disable-medialibrary --disable-nls --enable-debug
#      - make install -j8
#      - export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:$(pwd)/prefix/lib/pkgconfig"
#      - cd ..
#      - meson -Db_sanitize=thread build
#      - cd build && meson test --no-stdsplit
#      - meson compile fast_discover_cancel fast_teardown
#      - ./test/fast_teardown/fast_teardown $CI_PROJECT_DIR/test/samples/samples
#      - ./test/fast_discover_cancel/fast_discover_cancel $CI_PROJECT_DIR/test/samples/samples

